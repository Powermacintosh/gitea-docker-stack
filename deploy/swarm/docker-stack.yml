version: "3.8"

networks:
  gitea-custom:
    driver: overlay
    attachable: true
    driver_opts:
      encrypted: "false"

volumes:
  loki_data:
  grafana_data:
  redis_data:

configs:
  proxy_conf:
    file: ./configs/nginx-internal.conf

services:
  proxy:
    image: nginx:alpine3.22
    networks:
      - gitea-custom
    ports:
      - target: 80
        published: 8080
        protocol: tcp
        mode: ingress
    configs:
      - source: proxy_conf
        target: /etc/nginx/conf.d/default.conf
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
      placement:
        constraints:
          - node.role == manager

  db:
    image: postgres:18
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres/data:/var/lib/postgresql
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    networks:
      - gitea-custom
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        order: start-first
        delay: 10s
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gitea"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:8.2.2
    networks:
      - gitea-custom
    volumes:
      - redis_data:/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 30s
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  gitea:
    image: development.lanta.me/cloudharbor/custom-gitea:1.25.2
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - DB_TYPE=postgres
      - DB_HOST=${DB_HOST}:${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWD=${DB_PASS}

      - GITEA__queue__TYPE=redis
      - GITEA__queue__CONN_STR=redis://redis:6379/0
      - GITEA__queue__QUEUE_NAME=_queue
      - GITEA__queue__SET_NAME=_unique

      # - GITEA__API__ENABLE_SWAGGER=false # Включить/Выключить API документацию.

      # - GITEA__MAILER__ENABLED=false # Включить/Выключить почту
      # - GITEA__MAILER__FROM=${SMTP_MAIL}
      # - GITEA__MAILER__PROTOCOL=smtps
      # - GITEA__MAILER__SMTP_ADDR=${SMTP_HOST}
      # - GITEA__MAILER__SMTP_PORT=${SMTP_PORT}
      # - GITEA__MAILER__USER=${SMTP_MAIL}
      # - GITEA__MAILER__PASSWD=${SMTP_PASS}

      # - GITEA__SERVICE__DISABLE_REGISTRATION=true # Включить/Выключить регистрацию.
      # - GITEA__SERVICE__REGISTER_MANUAL_CONFIRM=true # Включить/Выключить подтверждение новых регистраций
      # - GITEA__SERVICE__REQUIRE_SIGNIN_VIEW=true # ❌ Включить/Выключить вход для просмотра страниц

      # - GITEA__OTHER__SHOW_FOOTER_VERSION=false # Показывать версию Gitea и Go в подвале.
      # - GITEA__OTHER__SHOW_FOOTER_TEMPLATE_LOAD_TIME=false # Показывать время выполнения шаблона в подвале.
      # - GITEA__OTHER__SHOW_FOOTER_POWERED_BY=false # Показывать текст "powered by" в подвале.
      # - GITEA__OTHER__ENABLE_SITEMAP=false # Генерировать sitemap.
      # - GITEA__OTHER__ENABLE_FEED=false # Включить/Выключить RSS/Atom feed.

      # - GITEA__i18n__LANGS=en-US,ru-RU,zh-CN # Доступные переводы
      # - GITEA__i18n__NAMES=English,Русский,简体中文 # Титульные названия переводов

      # - GITEA__UI__DEFAULT_THEME=meridian-dark # Установка темы по умолчанию
    volumes:
      - ./data/gitea:/data
    ports:
      - target: 22
        published: 2222
        protocol: tcp
        mode: ingress
    networks:
      - gitea-custom
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        delay: 5s
        failure_action: rollback
        max_failure_ratio: 0.3
    stop_grace_period: 100s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:3000/ready"]
      interval: 10s # проверка выполняется каждые 3 минуты
      timeout: 5s # проверка считается неуспешной, если не завершается за 10 секунд
      retries: 3 # количество попыток до отказа
      start_period: 2m # время, в течение которого не выполняются проверки

  gitea-runner:
    image: docker.io/gitea/act_runner:0.2.13
    environment:
      - CONFIG_FILE=/config.yaml
      - GITEA_RUNNER_REGISTRATION_TOKEN=${GITEA_RUNNER_TOKEN}
      - GITEA_INSTANCE_URL=http://gitea_gitea:3000
      - GITEA_RUNNER_NAME=admin-runner
    volumes:
      - ./configs/runner-config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runners/admin-runner:/data
    networks:
      - gitea-custom
    deploy:
      labels:
        - "com.gitea.runner.type=admin" # Лейбл типа раннера
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        order: start-first
        delay: 10s
      # Ожидание готовности Gitea
      placement:
        constraints:
          - "node.role==manager"
        preferences:
          - spread: node.labels.gitea

  loki:
    image: grafana/loki:3.5.7
    ports:
      - target: 3100
        published: 3100
        protocol: tcp
        mode: host
    volumes:
      - ./configs/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command:
      - -config.expand-env=true
      - -config.file=/etc/loki/local-config.yaml
    environment:
      LOKI_PORT: 3100
    networks:
      - gitea-custom
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 3

  promtail:
    image: grafana/promtail:3.5.7
    volumes:
      - ./configs/promtail-config.yaml:/etc/promtail/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command:
      - -config.expand-env=true
      - -config.file=/etc/promtail/config.yaml
    environment:
      LOKI_URL: http://gitea_loki:3100/loki/api/v1/push
    networks:
      - gitea-custom
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  grafana:
    image: grafana/grafana:12.2.1
    ports:
      - target: 3000
        published: 3010
        protocol: tcp
        mode: host
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - gitea-custom
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/login"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 2m
